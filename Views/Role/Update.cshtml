@using ProgrammaticFiltering.Models
@model RoleEdit
@{
    ViewData["Page"] = "Roles";
}
<h4>Edit Role</h4>
<a asp-action="Index" class="btn btn-secondary">Back</a>
<div asp-validation-summary="All" class="text-danger"></div>

<form method="post">
    <div class="row">
        <div class="col-3">
            <input type="hidden" name="roleName" value="@Model.Role.Name" />
            <input type="hidden" name="roleId" value="@Model.Role.Id" />

            <h5>Add To @Model.Role.Name</h5>
            <table class="table table-bordered table-sm">
                @if (Model.NonMembers.Count() == 0)
                {
                        <tr><td colspan="2">All Users Are Members</td></tr>
                }
                else
                {
                    @foreach (ApplicationUser user in Model.NonMembers)
                    {
                        <tr>
                            <td>@user.UserName</td>
                            <td>
                                <input type="checkbox" name="AddIds" value="@user.Id">
                            </td>
                        </tr>
                    }
                }
            </table>

            <h5>Remove From @Model.Role.Name</h5>
            <table class="table table-bordered table-sm" style="width:25%;">
                @if (Model.Members.Count() == 0)
                {
                        <tr><td colspan="2">No Users Are Members</td></tr>
                }
                else
                {
                        @foreach (ApplicationUser user in Model.Members)
                    {
                        <tr>
                            <td>@user.UserName</td>
                            <td>
                                <input type="checkbox" name="DeleteIds" value="@user.Id">
                            </td>
                        </tr>
                    }
                }
            </table>
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
</form>